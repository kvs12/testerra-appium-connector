plugins {
    id 'java'
}

repositories {
//    mavenLocal()
    mavenCentral()
//    jcenter()
}

allprojects {

    group 'eu.tsystems.mms.tic.testerra'
    version '1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish' // tasks publish and publishToMavenLocal

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                url System.getProperty("deployUrl", "none")
                credentials {
                    username System.getProperty("deployUsername", "none")
                    password System.getProperty("deployPassword", "none")
                }
            }
        }
    }
}

ext {

    activation = 'javax.activation:activation:1.1.1'

    seleniumVersion = '3.13.0'
    selenium = [
            'org.seleniumhq.selenium:selenium-remote-driver:' + seleniumVersion,
            'org.seleniumhq.selenium:selenium-java:' + seleniumVersion,
            'org.seleniumhq.selenium:selenium-server:' + seleniumVersion
    ]

    slf4j = [
            'org.slf4j:slf4j-api:1.8.0-beta2',
            'org.slf4j:slf4j-log4j12:1.8.0-beta2'
    ]

    seetest = 'com.experitest:seetest-client:12.7'

    jersey_client = 'org.glassfish.jersey.core:jersey-client:2.26'

    apache_commons = [
            'commons-io:commons-io:2.4',
            'commons-net:commons-net:3.2',
            'commons-lang:commons-lang:2.6',
            'org.apache.commons:commons-lang3:3.5',
            'org.apache.commons:commons-csv:1.5'
    ]

    jaxbVersion = '2.2.11'
    jaxb = [
            'javax.xml.bind:jaxb-api:' + jaxbVersion,
            'com.sun.xml.bind:jaxb-core:' + jaxbVersion,
            'com.sun.xml.bind:jaxb-impl:' + jaxbVersion
    ]

    testerraVersion = '1-SNAPSHOT'
    testerraGroup = 'eu.tsystems.mms.tic.testerra'
    testerraDriverUi = testerraGroup + ":driver-ui:" + testerraVersion
    testerraCoreInterop = testerraGroup + ":core-interop:" + testerraVersion

    powermockVersion = '1.7.3'
    powermock = [
            'org.powermock:powermock-module-testng:' + powermockVersion,
            'org.powermock:powermock-api-mockito2:' + powermockVersion
    ]

    mockito = 'org.mockito:mockito-core:2.8.9'
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8

    repositories {
        mavenLocal()

        maven { url "https://artifacts.mms-at-work.de/artifactory/prj-ticautom" }
        maven { url "http://repo.maven.apache.org/maven2" }
        // please setup in ${home}/.gradle/gradle.properties following info
        //mavenUser=your userneme
        //mavenPassword=artifactory enc password
        maven {
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
            url "https://artifacts.mms-at-work.de/artifactory/prj-ticautom"
        }

        jcenter()
        maven { url "http://repo.experitest.com:8010/Maven2" }
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG()
}
